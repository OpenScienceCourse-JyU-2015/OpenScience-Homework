* Cleaning the dataset

- Curating was thoroughly done, good job!
- When removing "weird" values, try to make your code robust, i.e. still
  working if the input file is updated later. For example, if there is a tree
  with an impossible height (832 meters), use:
  #+BEGIN_SRC 
  trees$height[trees$height > 200] = NA
  #+END_SRC
  instead of:
  #+BEGIN_SRC 
  trees$height[trees$height == 832] = NA
  #+END_SRC
  The second version only works for weird values at 832 meters, the first one
  works for all values above 200 meters.

* Storing the dataset in a SQLite database, respecting the first normal form

- There was a bit of misunderstanding about what we meant by splitting the data
  frame into two tables to avoid redundant information.
- I provided a full correction in the script =script_RSQLite.R=
- About not being able to create a database file: you can create the file by
  providing the filename without any argument name in the function call, as
  below:
  #+BEGIN_SRC 
  library(DBI)
  library(RSQLite)
  mydb <- dbConnect(RSQLite::SQLite(), "mydb.sqlite")
  # Do stuff with the database
  dbDisconnect(mydb)
  #+END_SRC

* Analysis

- There was some misunderstanding about what the final function was expected to
  perform (my mistake)
- The idea was to reuse the functions already written previously, instead of
  writing incrementally large functions
- Good ideas and good use of existing packages in the exploratory graphs

* Miscellaneous comments

- Code indentation: it is usually used to denote specific blocks such as *for*
  loops or *if* and *else* conditional blocks. Avoid using indentation to
  separate "sections" of your analysis as it might be confusing for other
  readers - use comments with the emphasis of your choice to denote section
  titles, for example:

  #+BEGIN_EXAMPLE
  # *** Section 1 ***

  # Assign variable
  x <- 1:10

  # *** Section 2 ***

  # Graph
  plot(x)
  #+END_EXAMPLE

- Make Git ignore intermediate files: it is good that you only keep track of
  your script files and raw data, since all intermediate files can be
  regenerated from them. It is good practice to tell Git which files it should
  ignore so that it will not warn you about them as being untracked. See the
  =.gitignore= file I created in your repository.

